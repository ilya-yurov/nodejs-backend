# Тут указывается версия
version: '3.0'

# Указываем сервисы, которые будут подниматься
services:
  # Само приложение
  main:
    # Имя контейнера
    container_name: nestjs_backend
    build:
      # Контекст билда
      context: .
    # Конфигурационные файлы
    env_file:
      - .development.env
    # Т.к. в режиме разработке мы постоянно будем изменять файлы, докер-контейнер должен об этом узнавать
    # для это указываем volumes, где сопоставляем текущую папку с рабочей директорией внутри докер-контейнера
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      # Пусть приложение в режиме разработки у нас всегда работает на 5000 порту
      - 5000:5000
      # Этот порт на тот случай, если мы захотим продебажить приложение
      - 9229:9229
    # Команда для запуска
    command: npm run start:dev
    # Указываем, что этот сервис зависит от постгрес, т.к. они связаны напрямую
    depends_on:
      - postgres
    restart: always

  # База данных
  postgres:
    # Имя контейнера
    container_name: postgres
    # Образ контейнера, берем рандомный, например:
    image: postgres:12
    env_file:
      - .development.env
    environment:
      # Нужно указать эту переменную, так сказано в документации чего-то там
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      # Нужно, чтобы мы не теряли данные внутри базы данных
      - pgdata:/var/lib/postgresql/data
    restart: always

# Тут нужно задекларировать переменные, которые используются в volumes
volumes:
  pgdata:
